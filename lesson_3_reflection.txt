git repository VS. directory >
	gr's have a hidden file ".git" that stores the metadata of the repository, like commits, changes, etc.


What happens when you initialize a repository? Why do you need to do it?

	When you "git init" a repository, 
	the ".git" hidden metadata file is created for the cwd
	this files tracks changes, commits, dates among other things for the cwd and its subdirectories
	by initializing a repository, you turn it into a git repository which is capable of version-control

new git commands >
	git init - to initialize a empty repository into git 
	git add - to add files to the staging area before a commit
	git status - to check the status of the current git repository 
	staging area - the pre-bundling of files before commiting the first commit to a repository 
			this allows you to commit selective/logically combined files in seperate batches with their own discriptions from 
			the get go
	working directory - is the the current directory, differs from the empty git repository 
	
How is the staging area different from the working directory and the repository? What value do you think it offers?
	the staging area is a pre-emptive step to commiting to the repository, it allows one to selective pick which files to batch
	and commit together as a logical commit rather than commiting all files at once
	this also allow you to provide the discription with each commit from the get go, to avoid any confusion in the future
	the working 
